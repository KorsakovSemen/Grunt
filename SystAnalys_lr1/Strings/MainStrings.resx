<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="acrossThePath" xml:space="preserve">
    <value>Через путь</value>
  </data>
  <data name="average" xml:space="preserve">
    <value>Среднее:</value>
  </data>
  <data name="chooseWay" xml:space="preserve">
    <value>Выберите другой путь для конфигурации</value>
  </data>
  <data name="clearGraph" xml:space="preserve">
    <value>Вы действительно хотите очистить граф/маршрут/светофоры/остановки?</value>
  </data>
  <data name="config" xml:space="preserve">
    <value>Конфигурация:</value>
  </data>
  <data name="delete" xml:space="preserve">
    <value>Удаление</value>
  </data>
  <data name="deleteGraph" xml:space="preserve">
    <value>Вы действительно хотите удалить граф/маршрут? </value>
  </data>
  <data name="done" xml:space="preserve">
    <value>Готово</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>Ошибка</value>
  </data>
  <data name="loading" xml:space="preserve">
    <value>Загрузка...</value>
  </data>
  <data name="matrixFirst" xml:space="preserve">
    <value>С датчиками:</value>
  </data>
  <data name="matrixSecond" xml:space="preserve">
    <value>Без:</value>
  </data>
  <data name="matrixThird" xml:space="preserve">
    <value>Всего:</value>
  </data>
  <data name="network" xml:space="preserve">
    <value>Сеть</value>
  </data>
  <data name="none" xml:space="preserve">
    <value>Ничего</value>
  </data>
  <data name="noPic" xml:space="preserve">
    <value>В папке отсутствует изображение</value>
  </data>
  <data name="procentFailed" xml:space="preserve">
    <value>Процент неудач:</value>
  </data>
  <data name="procentSuc" xml:space="preserve">
    <value>Процент успеха:</value>
  </data>
  <data name="putTrafficLights1" xml:space="preserve">
    <value>(1)Осталось поставить светофоров</value>
  </data>
  <data name="putTrafficLights2" xml:space="preserve">
    <value>(2)Осталось поставить светофоров</value>
  </data>
  <data name="hint" xml:space="preserve">
    <value>Перезагрузите программу для смены языка</value>
  </data>
  <data name="deleteBus" xml:space="preserve">
    <value>Вы действительно хотите удалить все автобусы маршрута/сети?</value>
  </data>
  <data name="bus" xml:space="preserve">
    <value>Должно быть больше 2 ребер</value>
  </data>
  <data name="errorPath" xml:space="preserve">
    <value>Неверный путь к файлу</value>
  </data>
  <data name="countBuses" xml:space="preserve">
    <value>Кол-во автобусов</value>
  </data>
  <data name="countSensors" xml:space="preserve">
    <value>Кол-во датчиков</value>
  </data>
  <data name="cycle" xml:space="preserve">
    <value>Цикл</value>
  </data>
  <data name="distance" xml:space="preserve">
    <value>При T равном</value>
  </data>
  <data name="found" xml:space="preserve">
    <value>Найдено</value>
  </data>
  <data name="numIter" xml:space="preserve">
    <value>Кол-во итераций</value>
  </data>
  <data name="sensorsDown" xml:space="preserve">
    <value>Снижение кол-ва датчиков в процентах</value>
  </data>
  <data name="all" xml:space="preserve">
    <value>Все</value>
  </data>
  <data name="busStops" xml:space="preserve">
    <value>Остановки</value>
  </data>
  <data name="Matrix" xml:space="preserve">
    <value>Ошибка создания матрицы</value>
  </data>
  <data name="TrafficLights" xml:space="preserve">
    <value>Светофоры</value>
  </data>
  <data name="VandE" xml:space="preserve">
    <value>Вершины и ребра</value>
  </data>
  <data name="minute" xml:space="preserve">
    <value>мин</value>
  </data>
  <data name="sec" xml:space="preserve">
    <value>сек</value>
  </data>
  <data name="notFound" xml:space="preserve">
    <value>Не найдено</value>
  </data>
  <data name="graphClear" xml:space="preserve">
    <value>Маршрут/граф</value>
  </data>
  <data name="chart" xml:space="preserve">
    <value>График</value>
  </data>
  <data name="report" xml:space="preserve">
    <value>Отчет</value>
  </data>
  <data name="theBuses" xml:space="preserve">
    <value>Автобусы</value>
  </data>
  <data name="create" xml:space="preserve">
    <value>Создать</value>
  </data>
  <data name="clearAll" xml:space="preserve">
    <value>Очистить все:</value>
  </data>
  <data name="saving" xml:space="preserve">
    <value>Сохранение...</value>
  </data>
  <data name="AfterButton" xml:space="preserve">
    <value>После</value>
  </data>
  <data name="ParametresLabel" xml:space="preserve">
    <value>Параметры загрязнения</value>
  </data>
  <data name="SettingsButton" xml:space="preserve">
    <value>Настроить</value>
  </data>
  <data name="ShowOriginalButton" xml:space="preserve">
    <value>До изменений </value>
  </data>
  <data name="ShowResultLabel" xml:space="preserve">
    <value>Показать результат</value>
  </data>
  <data name="SimulationLaabel" xml:space="preserve">
    <value>Симуляция</value>
  </data>
  <data name="StartStopLabel" xml:space="preserve">
    <value>Запустить/Остановить</value>
  </data>
  <data name="TimePastLabel" xml:space="preserve">
    <value>Времени прошло : </value>
  </data>
  <data name="station" xml:space="preserve">
    <value>Станции</value>
  </data>
</root>